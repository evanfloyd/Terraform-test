name: 'Deploy Docker image'

on:
  workflow_dispatch:
    inputs:
      docker_image_tag:
        description: The docker image tag you want to use.
        required: true
        default: v1.0.0
      docker_image_name:
        description: Specify your docker image name. This represents the folder in the repo structure.
        required: true
        default: magic-ball

jobs:
  deploy_docker_image:
    name: "Deploy docker image"
    runs-on: ${{ matrix.os }}
    env:
      image_tag: "${{ github.event.inputs.docker_image_tag }}"
      image_name: "${{ github.event.inputs.docker_image_name }}"
      AWS_INSTANCE_SG_ID: "${{ secrets.SG_ID }}"
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]

    steps:
      - uses: actions/checkout@v2

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws-region: "${{ secrets.AWS_DEFAULT_REGION }}"

      - name: "Set Build Persistent Variables and Dockerfile"
        shell: bash
        run: |
          source libraries/utilities/set_persistent_library_path

      - name: get runner ip addresses
        id: ip
        uses: haythem/public-ip@v1.2

      - name: whitelist runner ip address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol "-1" \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: "SSH into EC2 Instance and Deploy App"
        shell: bash
        env:
          key: "${{ secrets.SECRET_SSH_KEY }}"
          EC2_INSTANCE_USERNAME: "${{ secrets.INSTANCE_USERNAME }}"
          INSTANCE_DNS_NAME: "${{ secrets.INSTANCE_DNS_NAME }}"
        run: |
          set +x
          bash SSH_EC2_deploy_app.sh

      - name: revoke runner ip address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol "-1" \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32